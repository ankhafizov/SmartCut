version: '3'
services:

  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: always
    ports:
      - 8085:8080
    depends_on:
      - backend

  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: always
    volumes:
      - smartcut:/data

  resnet_based_detector_plugin:
    container_name: resnet_based_detector_plugin
    build:
      context: ./plugins
      dockerfile: ResNET_based_detector/Dockerfile
    restart: always
    environment:
      bootstrap_servers: kafka:29092
    depends_on:
      kafka:
        condition: service_healthy
    volumes:
      - smartcut:/data

  # detector_plugin:
  #   container_name: detector_plugin
  #   build:
  #     context: ./plugins/detector
  #     dockerfile: Dockerfile
  #   restart: always
  #   networks:
  #     - smartcut
  #   volumes:
  #     - smartcut:/data
  #   depends_on:
  #     - backend
  #     - frontend
  #     - kafka

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    restart: always
    ports:
      - "2181:2181"
    healthcheck:
      test: [ "CMD", "nc", "-vz", "localhost", "2181" ]
      interval: 5s
      timeout: 5s
      retries: 10

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    restart: always
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:29092,OUTSIDE://127.0.0.1:9092
      KAFKA_LISTENERS: INSIDE://0.0.0.0:29092,OUTSIDE://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    depends_on:
      zookeeper:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "nc", "-vz", "localhost", "9092" ]
      interval: 10s
      timeout: 5s
      retries: 10

  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafdrop
    restart: always
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:29092"
      JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
    depends_on:
      - kafka

volumes:
  smartcut:
